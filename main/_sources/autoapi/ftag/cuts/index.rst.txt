ftag.cuts
=========

.. py:module:: ftag.cuts


Attributes
----------

.. autoapisummary::

   ftag.cuts.OPERATORS


Classes
-------

.. autoapisummary::

   ftag.cuts.CutsResult
   ftag.cuts.Cut
   ftag.cuts.Cuts


Module Contents
---------------

.. py:data:: OPERATORS

.. py:class:: CutsResult

   Bases: :py:obj:`NamedTuple`


   Namespace alss for the cut results.

   .. attribute:: idx

      Positions of the cuts

      :type: np.ndarray

   .. attribute:: values

      Values of the cuts

      :type: np.ndarray


   .. py:attribute:: idx
      :type:  numpy.ndarray


   .. py:attribute:: values
      :type:  numpy.ndarray


.. py:class:: Cut

   Cut dataclass to store a single cut.

   .. attribute:: variable

      Variable on which the cut is applied

      :type: str

   .. attribute:: operator

      Operator for the cut

      :type: str


   .. py:attribute:: variable
      :type:  str


   .. py:attribute:: operator
      :type:  str


   .. py:attribute:: _value
      :type:  str | int | float


   .. py:property:: value
      :type: int | float



   .. py:method:: __call__(array)


   .. py:method:: __str__() -> str


.. py:class:: Cuts

   Cuts dataclass to store multiple Cut instances and apply them.

   .. attribute:: cuts

      Tuple with the Cut instances

      :type: tuple[Cut, ...]


   .. py:attribute:: cuts
      :type:  tuple[Cut, Ellipsis]


   .. py:method:: from_list(cuts: list) -> Cuts
      :classmethod:



   .. py:method:: empty() -> Cuts
      :classmethod:



   .. py:method:: __post_init__()


   .. py:property:: variables
      :type: list[str]



   .. py:method:: ignore(variables: list[str])


   .. py:method:: __call__(array: numpy.ndarray) -> CutsResult


   .. py:method:: __add__(other: Cuts)


   .. py:method:: __len__() -> int


   .. py:method:: __iter__() -> collections.abc.Iterator


   .. py:method:: __getitem__(variable)


   .. py:method:: __repr__() -> str


